{
	"info": {
		"_postman_id": "ed5004b0-96fe-4d2d-8f1e-f95d343f687c",
		"name": "Vlas-HW_1.5-Collect",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = cheerio.load(pm.response.text());\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"Body is correct\", function ()  {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							"\r",
							"//pm.test('String check'), function () {\r",
							"    //pm.expect(jsonData).to.be.a('String');\r",
							"    //pm.expect(jsonData).to.eql('This is the first responce from server!');\r",
							"//}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}first",
					"host": [
						"{{url}}first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"// let name = JSON.parse(request.data).name\r",
							"// let salary_req = request.data.salary;\r",
							"\r",
							"let name_response = jsonData.name;\r",
							"pm.test(\"Check name manual\", function () {\r",
							"    pm.expect(name_response).to.eql('Vlas');\r",
							"});\r",
							"\r",
							"let age_response = +jsonData.age;\r",
							"pm.test(\"Check age manual\", function () {\r",
							"    pm.expect(age_response).to.eql(29);\r",
							"});\r",
							"\r",
							"let salary_response = +jsonData.salary;\r",
							"pm.test(\"Check salary manual\", function () {\r",
							"    pm.expect(salary_response).to.eql(1000);\r",
							"});\r",
							"\r",
							"let jsonReqest = request.data;\r",
							"let age_request = +jsonReqest.age\r",
							"pm.test(\"Check age request\", function () {\r",
							"    pm.expect(age_request).to.eql(age_response);\r",
							"});\r",
							"\r",
							"let name_request = jsonReqest.name\r",
							"pm.test(\"Check name request\", function () {\r",
							"    pm.expect(name_request).to.eql(name_response);\r",
							"});\r",
							"\r",
							"let salary_request = +jsonReqest.salary\r",
							"pm.test(\"Check salary request\", function () {\r",
							"    pm.expect(salary_request).to.eql(salary_response);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"let u_salary_1_5_year_response = jsonData.family.u_salary_1_5_year\r",
							"pm.test(\"Check u_salary_1_5_year request\", function () {\r",
							"    pm.expect(u_salary_1_5_year_response).to.eql(salary_request * 4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const paramsString = request.url.split('?')[1];\r",
							"const eachParamArray = paramsString.split('&');\r",
							"let params = {};\r",
							"eachParamArray.forEach((param) => {\r",
							"    const key = param.split('=')[0];\r",
							"    const value = param.split('=')[1];\r",
							"    Object.assign(params, {[key]: value});\r",
							"});\r",
							"console.log('params', params);\r",
							"\r",
							"let params2 = pm.request.url.query.all()\r",
							"console.log('params2', params2)\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let jsonReqest = params;\r",
							"// console.log('jsonData', jsonData)\r",
							"\r",
							"let name_response = jsonData.name;\r",
							"let name_request = jsonReqest.name;\r",
							"pm.test(\"Check name request\", function () {\r",
							"    pm.expect(name_request).to.eql(name_response);\r",
							"});\r",
							"\r",
							"let age_response = jsonData.age;\r",
							"let age_request = jsonReqest.age;\r",
							"pm.test(\"Check age from request\", function () {\r",
							"    pm.expect(age_request).to.eql(age_response);\r",
							"});\r",
							"\r",
							"let salary_response = jsonData.salary;\r",
							"let salary_request = +jsonReqest.salary;\r",
							"pm.test(\"Check salary from request\", function () {\r",
							"    pm.expect(salary_request).to.eql(salary_response);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"Dog have name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Dog have age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\")\r",
							"});\r",
							"\r",
							"pm.test(\"Dog name manual\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"\r",
							"pm.test(\"Dog age manual\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_3?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{url}}object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"console.log(jsonData.salary);\r",
							"console.log(jsonReqest.salary);\r",
							"console.log(jsonData.salary[0]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{url}}object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}